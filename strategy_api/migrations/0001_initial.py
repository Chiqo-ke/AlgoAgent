# Generated by Django 5.2.7 on 2025-10-25 11:42

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Strategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('strategy_code', models.TextField(help_text='Complete strategy code')),
                ('parameters', models.JSONField(default=dict, help_text='Strategy parameters')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('validating', 'Validating'), ('valid', 'Valid'), ('invalid', 'Invalid'), ('active', 'Active'), ('inactive', 'Inactive')], default='draft', max_length=20)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('tags', models.JSONField(default=list, help_text='Strategy tags for classification')),
                ('timeframe', models.CharField(blank=True, help_text='Preferred timeframe', max_length=20)),
                ('risk_level', models.CharField(blank=True, help_text='Risk assessment', max_length=20)),
                ('expected_return', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('max_drawdown', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_validated', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StrategyComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('rating', models.IntegerField(blank=True, help_text='Rating from 1-5 stars', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('is_review', models.BooleanField(default=False, help_text='Is this a formal review?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, help_text='Reply to another comment', null=True, on_delete=django.db.models.deletion.CASCADE, to='strategy_api.strategycomment')),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='strategy_api.strategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StrategyPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backtest_id', models.CharField(blank=True, help_text='Reference to backtest run', max_length=100)),
                ('total_return', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('annualized_return', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('volatility', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('max_drawdown', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('win_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('profit_factor', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('total_trades', models.IntegerField(blank=True, null=True)),
                ('winning_trades', models.IntegerField(blank=True, null=True)),
                ('losing_trades', models.IntegerField(blank=True, null=True)),
                ('avg_trade_return', models.DecimalField(blank=True, decimal_places=6, max_digits=15, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('initial_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('final_capital', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_records', to='strategy_api.strategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='StrategyTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#000000', help_text='Hex color code for UI', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('strategies', models.ManyToManyField(blank=True, related_name='strategy_tags', to='strategy_api.strategy')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StrategyTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(help_text='Strategy category (e.g., momentum, mean_reversion)', max_length=100)),
                ('template_code', models.TextField(help_text='Template code with placeholders')),
                ('parameters_schema', models.JSONField(default=dict, help_text='JSON schema for strategy parameters')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.AddField(
            model_name='strategy',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='strategy_api.strategytemplate'),
        ),
        migrations.CreateModel(
            name='StrategyValidation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation_type', models.CharField(help_text='Type of validation (syntax, logic, security, etc.)', max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('passed', 'Passed'), ('failed', 'Failed'), ('error', 'Error')], default='pending', max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, help_text='Validation score 0-100', max_digits=5, null=True)),
                ('passed_checks', models.JSONField(default=list, help_text='List of passed validation checks')),
                ('failed_checks', models.JSONField(default=list, help_text='List of failed validation checks')),
                ('warnings', models.JSONField(default=list, help_text='List of warnings')),
                ('recommendations', models.JSONField(default=list, help_text='List of recommendations')),
                ('validator_version', models.CharField(blank=True, max_length=20)),
                ('validation_config', models.JSONField(default=dict, help_text='Configuration used for validation')),
                ('execution_time', models.DecimalField(blank=True, decimal_places=3, help_text='Validation time in seconds', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('strategy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='validations', to='strategy_api.strategy')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='strategy',
            unique_together={('name', 'version')},
        ),
    ]
